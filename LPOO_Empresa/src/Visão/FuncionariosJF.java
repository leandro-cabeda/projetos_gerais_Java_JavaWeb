/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visão;

import Controle.DepartamentoDAO;
import Controle.DependenteDAO;
import Controle.FuncionarioDAO;
import controle.EmpresaDAO;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Departamento;
import modelo.Dependente;
import modelo.Empresa;
import modelo.Funcionario;

/**
 *
 * @author Leandro
 */
public class FuncionariosJF extends javax.swing.JFrame {
    Object[] nomes= {"Nome Funcionário","Salário Hora","Departamento","Empresa"};
    DefaultTableModel modelotab= new DefaultTableModel(new Object[][]{},nomes);
    DefaultListModel modelo=new  DefaultListModel();
    /**
     * Creates new form FuncionariosJF
     */
    public FuncionariosJF() {
        initComponents();
        funcio.setModel(modelotab);
        lista.setModel(modelo);
        carregarDepartamento();
        carregarEmpresa();
        carregarFuncionario();
        del.setVisible(false);
        edit.setVisible(false);
        info.setVisible(false);
        //lista.setVisible(false);
        addep.setVisible(false);
        //deldep.setVisible(false);
       //depen.setVisible(false);
       carregarDependentes();
       
        
    }
    
    
    public void carregarDependentes()
    {
         modelo.removeAllElements();
         DependenteDAO dao=new DependenteDAO();
         for(Dependente dp:dao.buscar())
         {
             modelo.addElement(dp);
         }
         
    }
    
    public void carregarDependentes(Funcionario fun)
    {
         modelo.removeAllElements();
        DependenteDAO dao=new DependenteDAO();
        for(Dependente dp:dao.buscar(fun))
        {
            modelo.addElement(dp);
        }
    }
    
    
    public void carregarDepartamento()
    {
        DepartamentoDAO dao= new DepartamentoDAO();
        dep.removeAllItems();
        
        dep.addItem(null);
        for(Departamento e: dao.buscar())
        {
            dep.addItem(e);
           
        }
    }
    
    /*public void carregarDepartamento(Empresa ob)
    {
        EmpresaDAO dao= new EmpresaDAO();
        if(dep.getSelectedItem()!=null)
        {
                for(Empresa e: dao.buscar())
                     {
                        emp.addItem(e);

                      }
        }
        else
        {
            emp.removeAllItems();
        }
        
    }*/
    
    
   /* public void carregarFuncionario(ArrayList<Funcionario>lista)
    {
         modelotab.setNumRows(0);
        
        for(Funcionario obj: lista)
        {
            modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
        }
    }*/
    public void carregarEmpresa()
    {
        EmpresaDAO  dao= new EmpresaDAO ();
        emp.removeAllItems();
        
        emp.addItem(null);
        for(Empresa e: dao.buscar())
        {
            emp.addItem(e);
           
        }
    }
    
    public void carregarFuncionario()
    {
        
        modelotab.setNumRows(0);
        FuncionarioDAO dao= new FuncionarioDAO();
        
        for(Funcionario obj: dao.buscar())
        {
            modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dep = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        emp = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        busca = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        funcio = new javax.swing.JTable();
        add = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        del = new javax.swing.JButton();
        sair = new javax.swing.JButton();
        info = new javax.swing.JButton();
        depen = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        addep = new javax.swing.JButton();
        deldep = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Funcionários");

        jLabel1.setText("Lista de Funcionários");

        dep.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        dep.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                depItemStateChanged(evt);
            }
        });

        jLabel2.setText("Departamentos:");

        jLabel3.setText("Empresas:");

        emp.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        emp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                empItemStateChanged(evt);
            }
        });

        jLabel4.setText("Buscar:");

        busca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscaKeyReleased(evt);
            }
        });

        funcio.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        funcio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Título 4"
            }
        ));
        funcio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                funcioMouseClicked(evt);
            }
        });
        funcio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                funcioKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(funcio);

        add.setText("Adicionar Funcionário");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        edit.setText("Editar");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        del.setText("Excluir");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        info.setText("Info");
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });

        depen.setText("Dependentes:");

        lista.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setViewportView(lista);

        addep.setText("Adicionar Dependente");
        addep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addepActionPerformed(evt);
            }
        });

        deldep.setText("Remover Dependente");
        deldep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deldepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(del, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addep, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(deldep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(depen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dep, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(emp, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(busca, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(emp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add)
                            .addComponent(depen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(edit)
                                .addGap(18, 18, 18)
                                .addComponent(info)
                                .addGap(18, 18, 18)
                                .addComponent(del)
                                .addGap(49, 49, 49)
                                .addComponent(sair))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addep)
                                .addGap(34, 34, 34)
                                .addComponent(deldep))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
       CadastrarFuncionario tela= new CadastrarFuncionario(this, rootPaneCheckingEnabled);
       tela.setVisible(true);
       FuncionarioDAO dao=new FuncionarioDAO();
       Funcionario f=tela.getF();
       if(f!=null)
       {
           dao.adicionar(f);
           carregarFuncionario();
           carregarDepartamento();
           carregarEmpresa();
           busca.setText("");
           carregarDependentes();
       }
       
    }//GEN-LAST:event_addActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        this.dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        Funcionario objSel =(Funcionario)modelotab.getValueAt(funcio.getSelectedRow(),0);
        int opexc= JOptionPane.showConfirmDialog(rootPane,"Tem certeza qeu deseja excluir Funcionário(a) "+objSel.getNome()+"?");
        if(opexc== JOptionPane.YES_OPTION)
        {
            (new FuncionarioDAO()).excluir(objSel);
            carregarDepartamento();
            carregarEmpresa();
            carregarFuncionario();
            del.setVisible(false);
            edit.setVisible(false);
            info.setVisible(false);
            //lista.setVisible(false);
            addep.setVisible(false);
            //deldep.setVisible(false);
            //depen.setVisible(false);
            busca.setText("");
            carregarDependentes();
        }
    }//GEN-LAST:event_delActionPerformed

    private void funcioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funcioMouseClicked
        del.setVisible(true);
        edit.setVisible(true);
        info.setVisible(true);
        //lista.setVisible(true);
        addep.setVisible(true);
        //deldep.setVisible(true);
        //depen.setVisible(true);
        Funcionario ob =(Funcionario)modelotab.getValueAt(funcio.getSelectedRow(),0);
        carregarDependentes(ob);
    }//GEN-LAST:event_funcioMouseClicked

    private void funcioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_funcioKeyReleased
        del.setVisible(true);
        edit.setVisible(true);
        info.setVisible(true);
        //lista.setVisible(true);
        addep.setVisible(true);
        //deldep.setVisible(true);
        //depen.setVisible(true);
        Funcionario ob =(Funcionario)modelotab.getValueAt(funcio.getSelectedRow(),0);
        carregarDependentes(ob);
    }//GEN-LAST:event_funcioKeyReleased

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        Funcionario objSel =(Funcionario)modelotab.getValueAt(funcio.getSelectedRow(),0);
        JOptionPane.showMessageDialog(rootPane,objSel.getInfo());
    }//GEN-LAST:event_infoActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
       CadastrarFuncionario tela= new CadastrarFuncionario(this, rootPaneCheckingEnabled);
       Funcionario f=(Funcionario)modelotab.getValueAt(funcio.getSelectedRow(),0);
       
       if(f!=null)
       {
           FuncionarioDAO dao=new FuncionarioDAO();
           tela.setF(f);
           tela.carregarDados();
           tela.setVisible(true);
           dao.editar(f);
           carregarFuncionario();
           carregarDepartamento();
           carregarEmpresa();
           del.setVisible(false);
           edit.setVisible(false);
           info.setVisible(false);
           //lista.setVisible(false);
           addep.setVisible(false);
           //deldep.setVisible(false);
           //depen.setVisible(false);
           busca.setText("");
           carregarDependentes();
       }
      
       
    }//GEN-LAST:event_editActionPerformed

    private void buscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaKeyReleased
        String nome=busca.getText().trim();
        del.setVisible(false);
        edit.setVisible(false);
        info.setVisible(false);
        //lista.setVisible(false);
        addep.setVisible(false);
        //deldep.setVisible(false);
        //depen.setVisible(false);
        Departamento dp=(Departamento) dep.getSelectedItem();
        Empresa e=(Empresa) emp.getSelectedItem();
        FuncionarioDAO dao=new FuncionarioDAO();
        modelotab.setNumRows(0);
        funcio.removeAll();
        if(!nome.isEmpty())
        {
            for(Funcionario obj: dao.buscar(nome))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(!nome.isEmpty() && dp!=null)
        {
            for(Funcionario obj: dao.buscar(nome,dp))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(!nome.isEmpty() && e!=null)
        {
            for(Funcionario obj: dao.buscar(nome,e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(!nome.isEmpty() && dp!=null && e!=null)
        {
            for(Funcionario obj: dao.buscar(nome,dp,e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else
        {
            carregarFuncionario();
            carregarDependentes();
        }
    }//GEN-LAST:event_buscaKeyReleased

    private void depItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_depItemStateChanged
        String nome=busca.getText().trim();
        del.setVisible(false);
        edit.setVisible(false);
        info.setVisible(false);
        //lista.setVisible(false);
        addep.setVisible(false);
        //deldep.setVisible(false);
        //depen.setVisible(false);
        Departamento dp=(Departamento) dep.getSelectedItem();
        Empresa e=(Empresa) emp.getSelectedItem();
        //carregarDepartamento((Empresa) emp.getSelectedItem());
        FuncionarioDAO dao=new FuncionarioDAO();
        modelotab.setNumRows(0);
        funcio.removeAll();
        if(dp!=null)
        {
            for(Funcionario obj: dao.buscar(dp))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(!nome.isEmpty() && dp!=null)
        {
            for(Funcionario obj: dao.buscar(nome,dp))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(dp!=null && e!=null)
        {
            for(Funcionario obj: dao.buscar(dp,e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(!nome.isEmpty() && dp!=null && e!=null)
        {
            for(Funcionario obj: dao.buscar(nome,dp,e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else
        {
            carregarFuncionario();
            carregarDependentes();
        }
    }//GEN-LAST:event_depItemStateChanged

    private void empItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_empItemStateChanged
        String nome=busca.getText().trim();
        del.setVisible(false);
        edit.setVisible(false);
        info.setVisible(false);
        //lista.setVisible(false);
        addep.setVisible(false);
        //deldep.setVisible(false);
        //depen.setVisible(false);
         Departamento dp=(Departamento) dep.getSelectedItem();
        Empresa e=(Empresa) emp.getSelectedItem();
        FuncionarioDAO dao=new FuncionarioDAO();
        modelotab.setNumRows(0);
        funcio.removeAll();
        if(e!=null)
        {
            for(Funcionario obj: dao.buscar(e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(!nome.isEmpty() && e!=null)
        {
            for(Funcionario obj: dao.buscar(nome,e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(dp!=null && e!=null)
        {
            for(Funcionario obj: dao.buscar(dp,e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else if(!nome.isEmpty() && dp!=null && e!=null)
        {
            for(Funcionario obj: dao.buscar(nome,dp,e))
            {
                modelotab.addRow(new Object[]{obj,obj.getSalarioHora(),obj.getDepartamento(),obj.getDepartamento().getEmpresa()});
            }
        }
        else
        {
            carregarFuncionario();
            carregarDependentes();
        }
    }//GEN-LAST:event_empItemStateChanged

    private void addepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addepActionPerformed
        Funcionario ob =(Funcionario)modelotab.getValueAt(funcio.getSelectedRow(),0);
        AdicionarDependentes tela=new AdicionarDependentes(this, rootPaneCheckingEnabled);
        if(ob!=null)
        {
            tela.setFun(ob);
            tela.setVisible(true);
            carregarDependentes(ob);
        }
        
    }//GEN-LAST:event_addepActionPerformed

    private void deldepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deldepActionPerformed
        Dependente ob =(Dependente)lista.getSelectedValue();
        int opexc= JOptionPane.showConfirmDialog(rootPane,"Tem certeza que deseja excluir Dependente(a) "+ob.getNome()+"?");
        if(opexc== JOptionPane.YES_OPTION)
        {
            (new DependenteDAO()).excluir(ob);
            carregarDepartamento();
            carregarEmpresa();
            carregarFuncionario();
            del.setVisible(false);
            edit.setVisible(false);
            info.setVisible(false);
            //lista.setVisible(false);
            addep.setVisible(false);
            //deldep.setVisible(false);
            //depen.setVisible(false);
            busca.setText("");
            carregarDependentes();
        }
    }//GEN-LAST:event_deldepActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FuncionariosJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FuncionariosJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FuncionariosJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FuncionariosJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FuncionariosJF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton addep;
    private javax.swing.JTextField busca;
    private javax.swing.JButton del;
    private javax.swing.JButton deldep;
    private javax.swing.JComboBox<Departamento> dep;
    private javax.swing.JLabel depen;
    private javax.swing.JButton edit;
    private javax.swing.JComboBox<Empresa> emp;
    private javax.swing.JTable funcio;
    private javax.swing.JButton info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Dependente> lista;
    private javax.swing.JButton sair;
    // End of variables declaration//GEN-END:variables
}
